{
  "stats": {
    "suites": 3,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2020-02-21T14:01:36.756Z",
    "end": "2020-02-21T14:01:39.694Z",
    "duration": 2938,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1aee91c3-92b2-49f9-8f9f-5c69cf114328",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8eff0c9c-aad9-4a97-84d6-56dd3a92be1a",
          "title": "Github Api Test",
          "fullFile": "C:\\Users\\usuario\\Documents\\GitHub\\workshop-api-testing-js\\test\\GithubApi.Authentication.test.js",
          "file": "\\test\\GithubApi.Authentication.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "759d29ad-3f82-4db6-b00a-e0f5c94ec34f",
              "title": "Authentication",
              "fullFile": "C:\\Users\\usuario\\Documents\\GitHub\\workshop-api-testing-js\\test\\GithubApi.Authentication.test.js",
              "file": "\\test\\GithubApi.Authentication.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Via OAuth2 Tokens by Header",
                  "fullTitle": "Github Api Test Authentication Via OAuth2 Tokens by Header",
                  "timedOut": false,
                  "duration": 610,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await agent.get(`${urlBase}/repos/${githubUserName}/${repository}`)\n  .auth('token', process.env.ACCESS_TOKEN)\n  .set('User-Agent', 'agent');\nexpect(response.status).to.equal(statusCode.OK);\nexpect(response.body.description).equal('This is a Workshop about Api Testing in JavaScript');",
                  "err": {},
                  "uuid": "368d5c3e-dc6f-4a7b-8ac4-e860607f1934",
                  "parentUUID": "759d29ad-3f82-4db6-b00a-e0f5c94ec34f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "368d5c3e-dc6f-4a7b-8ac4-e860607f1934"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 610,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "d7691425-f6d2-4dc9-95d7-4b4af299a08f",
          "title": "First Api Tests",
          "fullFile": "C:\\Users\\usuario\\Documents\\GitHub\\workshop-api-testing-js\\test\\MyFirstApiConsume.test.js",
          "file": "\\test\\MyFirstApiConsume.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Consume GET Service",
              "fullTitle": "First Api Tests Consume GET Service",
              "timedOut": false,
              "duration": 512,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await agent.get('https://httpbin.org/ip');\nexpect(response.status).to.equal(statusCode.OK);\nexpect(response.body).to.have.property('origin');",
              "err": {},
              "uuid": "8326b8ee-5515-49aa-b1be-13537b9e41a0",
              "parentUUID": "d7691425-f6d2-4dc9-95d7-4b4af299a08f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Consume GET Service with query parameters",
              "fullTitle": "First Api Tests Consume GET Service with query parameters",
              "timedOut": false,
              "duration": 457,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const query = {\n  name: 'John',\n  age: '31',\n  city: 'New York'\n};\nconst response = await agent.get('https://httpbin.org/get').query(query);\nexpect(response.status).to.equal(statusCode.OK);\nexpect(response.body.args).to.eql(query);",
              "err": {},
              "uuid": "3304c7f7-09ab-4cc7-9ee3-cf0141149751",
              "parentUUID": "d7691425-f6d2-4dc9-95d7-4b4af299a08f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Consume PATCH Service with query parameters",
              "fullTitle": "First Api Tests Consume PATCH Service with query parameters",
              "timedOut": false,
              "duration": 421,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const query = {\n  name: 'Juan',\n  age: '23',\n  city: 'Cali'\n};\nconst response = await agent.patch('https://httpbin.org/patch').query(query);\nexpect(response.status).to.equal(statusCode.OK);\nexpect(response.body.args).to.eql(query);",
              "err": {},
              "uuid": "b6026145-29d1-46f0-8e43-e6b7fc6f26d3",
              "parentUUID": "d7691425-f6d2-4dc9-95d7-4b4af299a08f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Consume PUT Service with query parameters",
              "fullTitle": "First Api Tests Consume PUT Service with query parameters",
              "timedOut": false,
              "duration": 428,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const query = {\n  name: 'Carvi',\n  age: '22',\n  city: 'Cali'\n};\nconst response = await agent.put('https://httpbin.org/put').query(query);\nexpect(response.status).to.equal(statusCode.OK);\nexpect(response.body.args).to.eql(query);",
              "err": {},
              "uuid": "167585e8-e07d-4b6b-8aa7-07ea0868e635",
              "parentUUID": "d7691425-f6d2-4dc9-95d7-4b4af299a08f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Consume DELETE Service with query parameters",
              "fullTitle": "First Api Tests Consume DELETE Service with query parameters",
              "timedOut": false,
              "duration": 426,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const query = {\n  name: 'Kassandra',\n  age: '25',\n  city: 'Medellin'\n};\nconst response = await agent.delete('https://httpbin.org/delete').query(query);\nexpect(response.status).to.equal(statusCode.OK);\nexpect(response.body.args).to.eql(query);",
              "err": {},
              "uuid": "fa27e7c0-13e0-4e3b-afe0-3d2ea915498b",
              "parentUUID": "d7691425-f6d2-4dc9-95d7-4b4af299a08f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8326b8ee-5515-49aa-b1be-13537b9e41a0",
            "3304c7f7-09ab-4cc7-9ee3-cf0141149751",
            "b6026145-29d1-46f0-8e43-e6b7fc6f26d3",
            "167585e8-e07d-4b6b-8aa7-07ea0868e635",
            "fa27e7c0-13e0-4e3b-afe0-3d2ea915498b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2244,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "ApiTesting",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "reportDir": "report",
        "reportFilename": "ApiTesting"
      },
      "version": "4.1.0"
    }
  }
}